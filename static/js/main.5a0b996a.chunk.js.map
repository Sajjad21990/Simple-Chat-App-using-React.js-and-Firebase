{"version":3,"sources":["login/styles.js","login/login.js","signup/styles.js","signup/signup.js","NewChat/styles.js","NewChat/NewChat.js","chatlist/styles.js","chatlist/ChatList.js","chatview/styles.js","chatview/ChatView.js","chattextbox/styles.js","chattextbox/ChatTextBox.js","dashboard/styles.js","dashboard/dashboard.js","App.js","serviceWorker.js","index.js"],"names":["styles","theme","main","width","display","marginLeft","spacing","unit","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","form","submit","noAccountHeader","signUpLink","textDecoration","color","fontWeight","errorText","textAlign","firebase","require","LoginComponent","props","userTyping","type","e","setState","email","target","value","password","submitLogin","preventDefault","auth","signInWithEmailAndPassword","state","then","history","push","err","loginError","console","log","classes","this","className","CssBaseline","Paper","Typography","component","variant","onSubmit","FormControl","required","fullWidth","margin","InputLabel","htmlFor","Input","autoComplete","autoFocus","id","onChange","Button","to","React","Component","withStyles","hasAccountHeader","logInLink","SignupComponent","passwordConfirmation","formIsValid","submitSignup","createUserWithEmailAndPassword","authRes","userObj","user","firestore","collection","doc","set","dbError","signupError","authError","position","top","left","input","NewChatComponent","inputType","username","message","submitNewChat","a","userExists","chatExists","goToChat","createChat","buildDocKey","currentUser","sort","join","newChatSubmitFn","sendTo","goToChatFn","docKey","get","chat","exists","usersSnapshot","docs","map","_doc","data","includes","serverError","root","backgroundColor","palette","background","height","boxShadow","listItem","cursor","newChatBtn","borderRadius","unreadMessage","right","ChatListComponent","userIsSender","messages","length","sender","userEmail","newChat","newChatBtnFn","selectChat","index","selectChatfn","chats","onClick","List","_chat","_index","key","ListItem","selected","selectedChatIndex","ListItemAvatar","Avatar","alt","users","filter","_user","split","ListItemText","primary","secondary","Fragment","substring","receiverHasRead","ListItemIcon","content","overflow","boxSizing","overflowY","friendSent","float","clear","wordWrap","userSent","chatHeader","fontSize","paddingTop","ChatView","componentDidUpdate","container","document","getElementById","scrollTo","scrollHeight","undefined","_usr","_msg","sendBtn","chatTextBoxContainer","bottom","chatTextBox","ChatTextBox","keyCode","submitMessage","chatText","messageValid","txt","replace","userClickedInput","messageReadfn","submitfn","TextField","placeholder","onKeyUp","onFocus","signOutBtn","DashboardComponent","msg","usersInChat","find","every","newChatFormVisible","indexOf","submitMessageFunction","newChatSubmit","chatObj","signOut","newChatBtnClicked","selectedChat","chatIndex","messageRead","friend","update","FieldValue","arrayUnion","timestamp","Date","now","clickedChatWhereNotSender","componentDidMount","onAuthStateChanged","where","onSnapshot","res","ChatList","NewChat","App","exact","path","Boolean","window","location","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.5a0b996a.chunk.js","sourcesContent":["const styles = theme => ({\r\n  main: {\r\n    width: \"auto\",\r\n    display: \"block\", // Fix IE 11 issue.\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 400,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\"\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\r\n      .spacing.unit * 3}px`\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing.unit\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing.unit * 3\r\n  },\r\n  noAccountHeader: {\r\n    width: \"100%\"\r\n  },\r\n  signUpLink: {\r\n    width: \"100%\",\r\n    textDecoration: \"none\",\r\n    color: \"#303f9f\",\r\n    fontWeight: \"bolder\"\r\n  },\r\n  errorText: {\r\n    color: \"red\",\r\n    textAlign: \"center\"\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","import { Link } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport styles from \"./styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst firebase = require(\"firebase\");\r\n\r\nclass LoginComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: null,\r\n      password: null,\r\n      loginError: \"\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <main className={classes.main}>\r\n        <CssBaseline></CssBaseline>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h5\" variant=\"h6\">\r\n            Log In\r\n          </Typography>\r\n\r\n          <form onSubmit={e => this.submitLogin(e)} className={classes.form}>\r\n            <FormControl required fullWidth margin=\"normal\">\r\n              <InputLabel htmlFor=\"login-email-input\">\r\n                Enter Your Email\r\n              </InputLabel>\r\n              <Input\r\n                type=\"text\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                id=\"login-email-input\"\r\n                onChange={e => this.userTyping(\"email\", e)}\r\n              ></Input>\r\n            </FormControl>\r\n            <FormControl required fullWidth margin=\"normal\">\r\n              <InputLabel htmlFor=\"login-password-input\">\r\n                Enter Your Password\r\n              </InputLabel>\r\n              <Input\r\n                type=\"password\"\r\n                id=\"login-password-input\"\r\n                onChange={e => this.userTyping(\"password\", e)}\r\n              ></Input>\r\n            </FormControl>\r\n            {this.state.loginError ? (\r\n              <Typography\r\n                component=\"h5\"\r\n                variant=\"h6\"\r\n                className={classes.errorText}\r\n              >\r\n                {this.state.loginError}\r\n              </Typography>\r\n            ) : null}\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              className={classes.submit}\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Log In\r\n            </Button>\r\n            <Typography\r\n              className={classes.noAccountHeader}\r\n              component=\"h5\"\r\n              variant=\"h6\"\r\n            >\r\n              Don't Have An Account !!\r\n            </Typography>\r\n            <Link className={classes.signUpLink} to=\"/signup\">\r\n              Sign Up\r\n            </Link>\r\n          </form>\r\n        </Paper>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  userTyping = (type, e) => {\r\n    switch (type) {\r\n      case \"email\":\r\n        this.setState({ email: e.target.value });\r\n        break;\r\n\r\n      case \"password\":\r\n        this.setState({ password: e.target.value });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  submitLogin = e => {\r\n    e.preventDefault();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then(\r\n        () => {\r\n          this.props.history.push(\"/dashboard\");\r\n        },\r\n        err => {\r\n          this.setState({ loginError: \"Unable To Login\" });\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n}\r\n\r\nexport default withStyles(styles)(LoginComponent);\r\n","const styles = theme => ({\r\n  main: {\r\n    width: \"auto\",\r\n    display: \"block\", // Fix IE 11 issue.\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 400,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\"\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\r\n      .spacing.unit * 3}px`\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing.unit\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing.unit * 3\r\n  },\r\n  hasAccountHeader: {\r\n    width: \"100%\"\r\n  },\r\n  logInLink: {\r\n    width: \"100%\",\r\n    textDecoration: \"none\",\r\n    color: \"#303f9f\",\r\n    fontWeight: \"bolder\"\r\n  },\r\n  errorText: {\r\n    color: \"red\",\r\n    textAlign: \"center\"\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","import { Link } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport styles from \"./styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst firebase = require(\"firebase\");\r\n\r\nclass SignupComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: null,\r\n      password: null,\r\n      passwordConfirmation: null,\r\n      signupError: \"\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <main className={classes.main}>\r\n        <CssBaseline></CssBaseline>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign Up !\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={e => this.submitSignup(e)}>\r\n            <FormControl required fullWidth margin=\"normal\">\r\n              <InputLabel htmlFor=\"signup-email-input\">\r\n                Enter Your Email\r\n              </InputLabel>\r\n              <Input\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                id=\"signup-email-input\"\r\n                onChange={e => this.userTyping(\"email\", e)}\r\n              ></Input>\r\n            </FormControl>\r\n            <FormControl fullWidth margin=\"normal\" required>\r\n              <InputLabel htmlFor=\"signup-password-input\">\r\n                Enter Your Password\r\n              </InputLabel>\r\n              <Input\r\n                type=\"password\"\r\n                id=\"signup-password-input\"\r\n                onChange={e => this.userTyping(\"password\", e)}\r\n              ></Input>\r\n            </FormControl>\r\n            <FormControl fullWidth margin=\"normal\" required>\r\n              <InputLabel htmlFor=\"signup-password-confirmation--input\">\r\n                Confirm Your Password\r\n              </InputLabel>\r\n              <Input\r\n                type=\"password\"\r\n                id=\"signup-password-confirmation--input\"\r\n                onChange={e => this.userTyping(\"passwordConfirmation\", e)}\r\n              ></Input>\r\n            </FormControl>\r\n            <Button\r\n              type=\"sumit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              className={classes.submit}\r\n              color=\"primary\"\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            {this.state.signupError ? (\r\n              <Typography\r\n                component=\"h5\"\r\n                variant=\"h6\"\r\n                className={classes.errorText}\r\n              >\r\n                {this.state.signupError}\r\n              </Typography>\r\n            ) : null}\r\n            <Typography\r\n              component=\"h5\"\r\n              variant=\"h6\"\r\n              className={classes.hasAccountHeader}\r\n            >\r\n              Already Have An Account !\r\n            </Typography>\r\n            <Link className={classes.logInLink} to=\"/login\">\r\n              Log in\r\n            </Link>\r\n          </form>\r\n        </Paper>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  userTyping = (type, e) => {\r\n    switch (type) {\r\n      case \"email\":\r\n        this.setState({ email: e.target.value });\r\n        break;\r\n\r\n      case \"password\":\r\n        this.setState({ password: e.target.value });\r\n        break;\r\n\r\n      case \"passwordConfirmation\":\r\n        this.setState({ passwordConfirmation: e.target.value });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  formIsValid = () => this.state.password === this.state.passwordConfirmation;\r\n\r\n  submitSignup = e => {\r\n    e.preventDefault();\r\n    if (!this.formIsValid()) {\r\n      this.setState({ signupError: \"Passwords Do Not Match !!\" });\r\n      return;\r\n    }\r\n\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then(\r\n        authRes => {\r\n          const userObj = {\r\n            email: authRes.user.email\r\n          };\r\n          firebase\r\n            .firestore()\r\n            .collection(\"users\")\r\n            .doc(this.state.email)\r\n            .set(userObj)\r\n            .then(\r\n              () => {\r\n                this.props.history.push(\"/dashboard\");\r\n              },\r\n              dbError => {\r\n                console.log(dbError);\r\n\r\n                this.setState({\r\n                  signupError: \"Unable To Add User !!\" + dbError\r\n                });\r\n              }\r\n            );\r\n        },\r\n        authError => {\r\n          console.log(authError);\r\n          this.setState({ signupError: \"Unable To Add User !!\" });\r\n        }\r\n      );\r\n  };\r\n}\r\n\r\nexport default withStyles(styles)(SignupComponent);\r\n","const styles = (theme) => ({\r\n  main: {\r\n    width: \"auto\",\r\n    display: \"block\", // Fix IE 11 issue.\r\n    marginLeft: theme.spacing() * 3,\r\n    marginRight: theme.spacing() * 3,\r\n    [theme.breakpoints.up(400 + theme.spacing() * 3 * 2)]: {\r\n      width: 400,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    padding: `${theme.spacing() * 2}px ${theme.spacing() * 3}px ${\r\n      theme.spacing() * 3\r\n    }px`,\r\n    position: \"absolute\",\r\n    width: \"350px\",\r\n    top: \"50px\",\r\n    left: \"calc(50% + 150px - 175px)\",\r\n  },\r\n  input: {},\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(),\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing() * 3,\r\n  },\r\n  errorText: {\r\n    color: \"red\",\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import React from \"react\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Input,\r\n  Button,\r\n  Paper,\r\n  withStyles,\r\n  CssBaseline,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport styles from \"./styles\";\r\nconst firebase = require(\"firebase\");\r\n\r\nclass NewChatComponent extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: null,\r\n      message: null,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <main className={classes.main}>\r\n        <CssBaseline />\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Send A Message!\r\n          </Typography>\r\n          <form\r\n            className={classes.form}\r\n            onSubmit={(e) => this.submitNewChat(e)}\r\n          >\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"new-chat-username\">\r\n                Enter Your Friend's Email\r\n              </InputLabel>\r\n              <Input\r\n                required\r\n                className={classes.input}\r\n                autoFocus\r\n                onChange={(e) => this.userTyping(\"username\", e)}\r\n                id=\"new-chat-username\"\r\n              ></Input>\r\n            </FormControl>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"new-chat-message\">\r\n                Enter Your Message\r\n              </InputLabel>\r\n              <Input\r\n                required\r\n                className={classes.input}\r\n                onChange={(e) => this.userTyping(\"message\", e)}\r\n                id=\"new-chat-message\"\r\n              ></Input>\r\n            </FormControl>\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              type=\"submit\"\r\n            >\r\n              Send\r\n            </Button>\r\n          </form>\r\n          {this.state.serverError ? (\r\n            <Typography\r\n              component=\"h5\"\r\n              variant=\"h6\"\r\n              className={classes.errorText}\r\n            >\r\n              Unable to locate the user\r\n            </Typography>\r\n          ) : null}\r\n        </Paper>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (!firebase.auth().currentUser) this.props.history.push(\"/login\");\r\n  }\r\n\r\n  userTyping = (inputType, e) => {\r\n    switch (inputType) {\r\n      case \"username\":\r\n        this.setState({ username: e.target.value });\r\n        break;\r\n\r\n      case \"message\":\r\n        this.setState({ message: e.target.value });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  submitNewChat = async (e) => {\r\n    e.preventDefault();\r\n    const userExists = await this.userExists();\r\n    if (userExists) {\r\n      const chatExists = await this.chatExists();\r\n      chatExists ? this.goToChat() : this.createChat();\r\n    }\r\n  };\r\n\r\n  buildDocKey = () =>\r\n    [firebase.auth().currentUser.email, this.state.username].sort().join(\":\");\r\n\r\n  createChat = () => {\r\n    this.props.newChatSubmitFn({\r\n      sendTo: this.state.username,\r\n      message: this.state.message,\r\n    });\r\n  };\r\n\r\n  goToChat = () =>\r\n    this.props.goToChatFn(this.buildDocKey(), this.state.message);\r\n\r\n  chatExists = async () => {\r\n    const docKey = this.buildDocKey();\r\n    const chat = await firebase\r\n      .firestore()\r\n      .collection(\"chats\")\r\n      .doc(docKey)\r\n      .get();\r\n    console.log(chat.exists);\r\n    return chat.exists;\r\n  };\r\n\r\n  userExists = async () => {\r\n    const usersSnapshot = await firebase.firestore().collection(\"users\").get();\r\n    const exists = usersSnapshot.docs\r\n      .map((_doc) => _doc.data().email)\r\n      .includes(this.state.username);\r\n    this.setState({ serverError: !exists });\r\n    return exists;\r\n  };\r\n}\r\n\r\nexport default withStyles(styles)(NewChatComponent);\r\n","const styles = theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    height: \"calc(100% - 35px)\",\r\n    position: \"absolute\",\r\n    left: \"0\",\r\n    width: \"300px\",\r\n    boxShadow: \"0px 0px 2px black\"\r\n  },\r\n  listItem: {\r\n    cursor: \"pointer\"\r\n  },\r\n  newChatBtn: {\r\n    borderRadius: \"0px\"\r\n  },\r\n  unreadMessage: {\r\n    color: \"red\",\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n    right: \"5px\"\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport styles from \"./styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport NotificationImportant from \"@material-ui/icons/NotificationImportant\";\r\n\r\nclass ChatListComponent extends React.Component {\r\n  render() {\r\n    const { classes } = this.props;\r\n    if (this.props.chats.length > 0) {\r\n      return (\r\n        <main className={classes.root}>\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.newChatBtn}\r\n            onClick={this.newChat}\r\n          >\r\n            New Message\r\n          </Button>\r\n          <List>\r\n            {this.props.chats.map((_chat, _index) => {\r\n              return (\r\n                <div key={_index}>\r\n                  <ListItem\r\n                    onClick={() => this.selectChat(_index)}\r\n                    className={classes.ListItem}\r\n                    selected={this.props.selectedChatIndex === _index}\r\n                    alignItems=\"flex-start\"\r\n                  >\r\n                    <ListItemAvatar>\r\n                      <Avatar alt={\"Remmy Sharp\"}>\r\n                        {_chat.users\r\n                          .filter((_user) => _user !== this.props.userEmail)[0]\r\n                          .split(\"\")}\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={\r\n                        _chat.users.filter(\r\n                          (_user) => _user !== this.props.userEmail\r\n                        )[0]\r\n                      }\r\n                      secondary={\r\n                        <React.Fragment>\r\n                          <Typography component=\"span\" color=\"textPrimary\">\r\n                            {_chat.messages[\r\n                              _chat.messages.length - 1\r\n                            ].message.substring(0, 30)}\r\n                          </Typography>\r\n                        </React.Fragment>\r\n                      }\r\n                    ></ListItemText>\r\n                    {_chat.receiverHasRead === false &&\r\n                    !this.userIsSender(_chat) ? (\r\n                      <ListItemIcon>\r\n                        <NotificationImportant\r\n                          className={classes.unreadMessage}\r\n                        ></NotificationImportant>\r\n                      </ListItemIcon>\r\n                    ) : null}\r\n                  </ListItem>\r\n                </div>\r\n              );\r\n            })}\r\n          </List>\r\n        </main>\r\n      );\r\n    } else {\r\n      return (\r\n        <main className={classes.root}>\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.newChatBtn}\r\n            onClick={this.newChat}\r\n          >\r\n            New Message\r\n          </Button>\r\n          <List></List>\r\n        </main>\r\n      );\r\n    }\r\n  }\r\n\r\n  userIsSender = (chat) =>\r\n    chat.messages[chat.messages.length - 1].sender === this.props.userEmail;\r\n\r\n  newChat = () => {\r\n    this.props.newChatBtnFn();\r\n  };\r\n\r\n  selectChat = (index) => {\r\n    this.props.selectChatfn(index);\r\n  };\r\n}\r\n\r\nexport default withStyles(styles)(ChatListComponent);\r\n","const styles = theme => ({\r\n  content: {\r\n    height: \"calc(100vh - 100px)\",\r\n    overflow: \"auto\",\r\n    padding: \"25px\",\r\n    marginLeft: \"300px\",\r\n    boxSizing: \"border-box\",\r\n    overflowY: \"scroll\",\r\n    top: \"50px\",\r\n    width: \"calc(100% - 300px)\",\r\n    position: \"absolute\"\r\n  },\r\n\r\n  friendSent: {\r\n    float: \"left\",\r\n    clear: \"both\",\r\n    padding: \"20px\",\r\n    boxSizing: \"border-box\",\r\n    wordWrap: \"break-word\",\r\n    marginTop: \"10px\",\r\n    backgroundColor: \"#707BC4\",\r\n    color: \"white\",\r\n    width: \"300px\",\r\n    borderRadius: \"10px\"\r\n  },\r\n\r\n  userSent: {\r\n    float: \"right\",\r\n    clear: \"both\",\r\n    padding: \"20px\",\r\n    boxSizing: \"border-box\",\r\n    wordWrap: \"break-word\",\r\n    marginTop: \"10px\",\r\n    backgroundColor: \"#707BC4\",\r\n    color: \"white\",\r\n    width: \"300px\",\r\n    borderRadius: \"10px\"\r\n  },\r\n\r\n  chatHeader: {\r\n    width: \"calc(100% - 301px)\",\r\n    height: \"50px\",\r\n    backgroundColor: \"#344195\",\r\n    position: \"fixed\",\r\n    marginLeft: \"301px\",\r\n    fontSize: \"18px\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    paddingTop: \"10px\",\r\n    boxSizing: \"border-box\"\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","import React from \"react\";\r\nimport styles from \"./styles\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nclass ChatView extends React.Component {\r\n  render() {\r\n    const { classes, chat, user } = this.props;\r\n    console.log(chat);\r\n    console.log(user);\r\n\r\n    this.componentDidUpdate = () => {\r\n      const container = document.getElementById(\"chatview-container\");\r\n      if (container) {\r\n        container.scrollTo(0, container.scrollHeight);\r\n      }\r\n    };\r\n\r\n    if (chat === undefined) {\r\n      return <main className={classes.content}></main>;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <div className={classes.chatHeader}>\r\n            Your Conversation With{\" \"}\r\n            {chat.users.filter((_usr) => _usr !== user)[0]}\r\n          </div>\r\n          <main id=\"chatview-container\" className={classes.content}>\r\n            {chat.messages.map((_msg, _index) => {\r\n              return (\r\n                <div\r\n                  key={_index}\r\n                  className={\r\n                    _msg.sender === user ? classes.userSent : classes.friendSent\r\n                  }\r\n                >\r\n                  {_msg.message}\r\n                </div>\r\n              );\r\n            })}\r\n          </main>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ChatView);\r\n","const styles = theme => ({\r\n  sendBtn: {\r\n    color: \"blue\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      color: \"gray\"\r\n    }\r\n  },\r\n\r\n  chatTextBoxContainer: {\r\n    position: \"absolute\",\r\n    bottom: \"15px\",\r\n    left: \"315px\",\r\n    boxSizing: \"border-box\",\r\n    overflow: \"auto\",\r\n    width: \"calc(100% - 300px - 50px)\"\r\n  },\r\n\r\n  chatTextBox: {\r\n    width: \"calc(100% - 25px)\"\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Send from \"@material-ui/icons/Send\";\r\nimport styles from \"./styles\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nclass ChatTextBox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chatText: \"\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.chatTextBoxContainer}>\r\n        <TextField\r\n          placeholder=\"Type Your Message...\"\r\n          onKeyUp={e => this.userTyping(e)}\r\n          id=\"chattextbox\"\r\n          className={classes.chatTextBox}\r\n          onFocus={this.userClickedInput}\r\n        ></TextField>\r\n        <Send onClick={this.submitMessage} className={classes.sendBtn}></Send>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  userTyping = e => {\r\n    e.keyCode === 13\r\n      ? this.submitMessage()\r\n      : this.setState({ chatText: e.target.value });\r\n  };\r\n\r\n  messageValid = txt => txt && txt.replace(/\\s/g, \"\").length;\r\n\r\n  userClickedInput = () => this.props.messageReadfn();\r\n\r\n  submitMessage = () => {\r\n    if (this.messageValid(this.state.chatText)) {\r\n      this.props.submitfn(this.state.chatText);\r\n      document.getElementById(\"chattextbox\").value = \"\";\r\n      console.log(\"submitted\");\r\n    }\r\n  };\r\n}\r\n\r\nexport default withStyles(styles)(ChatTextBox);\r\n","const styles = theme => ({\r\n  signOutBtn: {\r\n    position: \"absolute\",\r\n    bottom: \"0px\",\r\n    left: \"0px\",\r\n    width: \"300px\",\r\n    borderRadius: \"0px\",\r\n    backgroundColor: \"#227092\",\r\n    height: \"35px\",\r\n    boxShadow: \"0px 0px 2px black\",\r\n    color: \"white\"\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","import React from \"react\";\r\nimport NewChatComponent from \"../NewChat/NewChat\";\r\nimport ChatListComponent from \"../chatlist/ChatList\";\r\nimport ChatView from \"../chatview/ChatView\";\r\nimport ChatTextBox from \"../chattextbox/ChatTextBox\";\r\nimport styles from \"./styles\";\r\nimport { Button, withStyles } from \"@material-ui/core\";\r\n\r\nconst firebase = require(\"firebase\");\r\n\r\nclass DashboardComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: null,\r\n      selectedChat: null,\r\n      newChatFormVisible: false,\r\n      chats: [],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <ChatListComponent\r\n          history={this.props.history}\r\n          userEmail={this.state.email}\r\n          chats={this.state.chats}\r\n          newChatBtnFn={this.newChatBtnClicked}\r\n          selectChatfn={this.selectChat}\r\n          selectedChatIndex={this.state.selectedChat}\r\n        ></ChatListComponent>\r\n        {this.state.newChatFormVisible ? null : (\r\n          <ChatView\r\n            user={this.state.email}\r\n            chat={this.state.chats[this.state.selectedChat]}\r\n          ></ChatView>\r\n        )}\r\n        {this.state.selectedChat !== null && !this.state.newChatFormVisible ? (\r\n          <ChatTextBox\r\n            submitfn={this.submitMessageFunction}\r\n            messageReadfn={this.messageRead}\r\n          ></ChatTextBox>\r\n        ) : null}\r\n        {this.state.newChatFormVisible ? (\r\n          <NewChatComponent\r\n            goToChatFn={this.goToChat}\r\n            newChatSubmitFn={this.newChatSubmit}\r\n          ></NewChatComponent>\r\n        ) : null}\r\n        <Button\r\n          className={classes.signOutBtn}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={this.signOutBtn}\r\n        >\r\n          Sign Out\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  goToChat = async (docKey, msg) => {\r\n    const usersInChat = docKey.split(\":\");\r\n    const chat = this.state.chats.find((_chat) =>\r\n      usersInChat.every((_user) => _chat.users.includes(_user))\r\n    );\r\n    this.setState({ newChatFormVisible: false });\r\n    await this.selectChat(this.state.chats.indexOf(chat));\r\n    this.submitMessageFunction(msg);\r\n  };\r\n\r\n  newChatSubmit = async (chatObj) => {\r\n    const docKey = this.buildDocKey(chatObj.sendTo);\r\n    await firebase\r\n      .firestore()\r\n      .collection(\"chats\")\r\n      .doc(docKey)\r\n      .set({\r\n        receiverHasRead: false,\r\n        users: [\r\n          {\r\n            message: chatObj.message,\r\n            sender: this.state.email,\r\n          },\r\n        ],\r\n      });\r\n    this.setState({ newChatFormVisible: false });\r\n    this.selectChat(this.state.chats.length - 1);\r\n  };\r\n\r\n  signOutBtn = () => {\r\n    firebase.auth().signOut();\r\n  };\r\n\r\n  newChatBtnClicked = () => {\r\n    this.setState({ newChatFormVisible: true, selectedChat: null });\r\n  };\r\n\r\n  selectChat = async (chatIndex) => {\r\n    await this.setState({ selectedChat: chatIndex });\r\n    this.messageRead();\r\n  };\r\n\r\n  buildDocKey = (friend) => [this.state.email, friend].sort().join(\":\");\r\n\r\n  submitMessageFunction = (msg) => {\r\n    const docKey = this.buildDocKey(\r\n      this.state.chats[this.state.selectedChat].users.filter(\r\n        (_usr) => _usr !== this.state.email\r\n      )[0]\r\n    );\r\n    firebase\r\n      .firestore()\r\n      .collection(\"chats\")\r\n      .doc(docKey)\r\n      .update({\r\n        messages: firebase.firestore.FieldValue.arrayUnion({\r\n          sender: this.state.email,\r\n          message: msg,\r\n          timestamp: Date.now(),\r\n        }),\r\n        receiverHasRead: false,\r\n      });\r\n  };\r\n\r\n  messageRead = () => {\r\n    const docKey = this.buildDocKey(\r\n      this.state.chats[this.state.selectedChat].users.filter(\r\n        (_usr) => _usr !== this.state.email\r\n      )[0]\r\n    );\r\n    if (this.clickedChatWhereNotSender(this.state.selectedChat)) {\r\n      firebase\r\n        .firestore()\r\n        .collection(\"chats\")\r\n        .doc(docKey)\r\n        .update({ receiverHasRead: true });\r\n    } else {\r\n      console.log(\"hi\");\r\n    }\r\n  };\r\n\r\n  clickedChatWhereNotSender = (chatIndex) =>\r\n    this.state.chats[chatIndex].messages[\r\n      this.state.chats[chatIndex].messages.length - 1\r\n    ].sender !== this.state.email;\r\n\r\n  componentDidMount = () => {\r\n    firebase.auth().onAuthStateChanged(async (_usr) => {\r\n      if (!_usr) {\r\n        this.props.history.push(\"/\");\r\n      } else {\r\n        await firebase\r\n          .firestore()\r\n          .collection(\"chats\")\r\n          .where(\"users\", \"array-contains\", _usr.email)\r\n          .onSnapshot(async (res) => {\r\n            const chats = res.docs.map((_doc) => _doc.data());\r\n            await this.setState({\r\n              email: _usr.email,\r\n              chats: chats,\r\n            });\r\n          });\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nexport default withStyles(styles)(DashboardComponent);\r\n","import React from \"react\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport LoginComponent from \"./login/login\";\nimport SignupComponent from \"./signup/signup\";\nimport DashboardComponent from \"./dashboard/dashboard\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={LoginComponent}></Route>\n        <Route path=\"/signup\" component={SignupComponent}></Route>\n        <Route path=\"/dashboard\" component={DashboardComponent}></Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst firebase = require(\"firebase\");\nrequire(\"firebase/firestore\");\n\n//Enter Your Firebase Api Key:\nfirebase.initializeApp({\n  apiKey: \"\",\n  authDomain: \"\",\n  databaseURL: \"\",\n  projectId: \"\",\n  storageBucket: \"\",\n  messagingSenderId: \"\",\n  appId: \"\",\n  measurementId: \"\",\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}